;/\ VECT <SET-EXC-HANDLER> \ установить обработчик аппаратных исключений
;/
;/
;/T: HERE DP @ DUP TO :-SET ;

HERE:
/*	mov	%rax,-0x08(%rbp)	\ 409D06 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x401650  { ORIGVIEWLINK+3A  } (%rip),%rax	\ 409D0A 	*/.byte 0x48,0x8B,0x5,0x3F,0x79,0xFF,0xFF
/*	mov	%rax,0x402375  { :-SET+5  } (%rip)	\ 409D11 	*/.byte 0x48,0x89,0x5,0x5D,0x86,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 409D18 	*/.byte 0x48,0x8D,0x6D,0xF8
	ret		\ 409D1C C3 
;/
;/T: DUP>R
;/ OPT_INIT


DUPgreatR:
	call	0x40916A  { OPT_INIT } 	\ 409D1D E8 48 F4 FF FF 
;/  SetOP  $50 C, OPT \ Push    %rax
	call	0x40240E  { SetOP } 	\ 409D22 E8 E7 86 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409D27 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x50,%eax	\ 409D2B 	*/.byte 0xB8,0x50,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409D30 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409D34 E8 B5 79 FF FF 
	call	0x408DA1  { OPT } 	\ 409D39 E8 63 F0 FF FF 
;/ OPT_CLOSE
	call	0x409175  { OPT_CLOSE } 	\ 409D3E E8 32 F4 FF FF 
;/; IMMEDIATE
	ret		\ 409D43 C3 
;/
;/T: >R 
;/ OPT_INIT


greatR:
	call	0x40916A  { OPT_INIT } 	\ 409D44 E8 21 F4 FF FF 
;/ SetOP $50 C,  OPT \ Push    %rax
	call	0x40240E  { SetOP } 	\ 409D49 E8 C0 86 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409D4E 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x50,%eax	\ 409D52 	*/.byte 0xB8,0x50,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409D57 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409D5B E8 8E 79 FF FF 
	call	0x408DA1  { OPT } 	\ 409D60 E8 3C F0 FF FF 
;/ OPT_CLOSE
	call	0x409175  { OPT_CLOSE } 	\ 409D65 E8 B F4 FF FF 
;/ ['] DROP INLINE,
/*	mov	%rax,-0x08(%rbp)	\ 409D6A 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x4003FC  { D>S } (%rip),%rax	\ 409D6E 	*/.byte 0x48,0x8D,0x5,0x87,0x66,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 409D75 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x40919C  { INLINE, } 	\ 409D79 E8 1E F4 FF FF 
;/; IMMEDIATE
	ret		\ 409D7E C3 
;/
;/T: R>
;/ ['] DUP INLINE,


Rgreat:
/*	mov	%rax,-0x08(%rbp)	\ 409D7F 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x4007F1  { DUP } (%rip),%rax	\ 409D83 	*/.byte 0x48,0x8D,0x5,0x67,0x6A,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 409D8A 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x40919C  { INLINE, } 	\ 409D8E E8 9 F4 FF FF 
;/ OPT_INIT
	call	0x40916A  { OPT_INIT } 	\ 409D93 E8 D2 F3 FF FF 
;/ SetOP  $58 C,  OPT \ POP    %rax
	call	0x40240E  { SetOP } 	\ 409D98 E8 71 86 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409D9D 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x58,%eax	\ 409DA1 	*/.byte 0xB8,0x58,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409DA6 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409DAA E8 3F 79 FF FF 
	call	0x408DA1  { OPT } 	\ 409DAF E8 ED EF FF FF 
;/ OPT_CLOSE
	call	0x409175  { OPT_CLOSE } 	\ 409DB4 E8 BC F3 FF FF 
;/; IMMEDIATE
	ret		\ 409DB9 C3 
;/
;/T: R@
;/ ['] DUP INLINE,


Rload:
/*	mov	%rax,-0x08(%rbp)	\ 409DBA 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x4007F1  { DUP } (%rip),%rax	\ 409DBE 	*/.byte 0x48,0x8D,0x5,0x2C,0x6A,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 409DC5 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x40919C  { INLINE, } 	\ 409DC9 E8 CE F3 FF FF 
;/ OPT_INIT
	call	0x40916A  { OPT_INIT } 	\ 409DCE E8 97 F3 FF FF 
;/ SetOP  $24048B48 L,  OPT \  mov    (%rsp),%rax
	call	0x40240E  { SetOP } 	\ 409DD3 E8 36 86 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409DD8 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x24048B48,%eax	\ 409DDC 	*/.byte 0xB8,0x48,0x8B,0x4,0x24
/*	lea	-0x08(%rbp),%rbp	\ 409DE1 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016AB  { L, } 	\ 409DE5 E8 C1 78 FF FF 
	call	0x408DA1  { OPT } 	\ 409DEA E8 B2 EF FF FF 
;/ OPT_CLOSE
	call	0x409175  { OPT_CLOSE } 	\ 409DEF E8 81 F3 FF FF 
;/; IMMEDIATE
	ret		\ 409DF4 C3 
;/
;/T: RDROP
;/ OPT_INIT


RDROP:
	call	0x40916A  { OPT_INIT } 	\ 409DF5 E8 70 F3 FF FF 
;/ SetOP $24648D48 L, $08 C,  OPT  \  	lea    0x8(%rsp),%rsp
	call	0x40240E  { SetOP } 	\ 409DFA E8 F 86 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409DFF 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x24648D48,%eax	\ 409E03 	*/.byte 0xB8,0x48,0x8D,0x64,0x24
/*	lea	-0x08(%rbp),%rbp	\ 409E08 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016AB  { L, } 	\ 409E0C E8 9A 78 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409E11 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x8,%eax	\ 409E15 	*/.byte 0xB8,0x8,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409E1A 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409E1E E8 CB 78 FF FF 
	call	0x408DA1  { OPT } 	\ 409E23 E8 79 EF FF FF 
;/ OPT_CLOSE
	call	0x409175  { OPT_CLOSE } 	\ 409E28 E8 48 F3 FF FF 
;/; IMMEDIATE
	ret		\ 409E2D C3 
;/
;/
;/0 VALUE TO_MOVK


TO_MOVK:
	call	0x400AF4  { DOVALUE } 	\ 409E2E E8 C1 6C FF FF 

	DQ 0x0
;/\ : SSSS   TO_MOVK ;
;/
;/: LIT,0 ( n -- )
;/\ compile code for a literal
;/  ['] DUP  INLINE,

LITcom0:
/*	mov	%rax,-0x08(%rbp)	\ 409E3B 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x4007F1  { DUP } (%rip),%rax	\ 409E3F 	*/.byte 0x48,0x8D,0x5,0xAB,0x69,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 409E46 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x40919C  { INLINE, } 	\ 409E4A E8 4D F3 FF FF 
;/  OPT_INIT SetOP
	call	0x40916A  { OPT_INIT } 	\ 409E4F E8 16 F3 FF FF 
	call	0x40240E  { SetOP } 	\ 409E54 E8 B5 85 FF FF 
;/
;/   DUP  $100000000 U< NEWLIT AND
/*	mov	%rax,-0x08(%rbp)	\ 409E59 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	%rax,-0x10(%rbp)	\ 409E5D 	*/.byte 0x48,0x89,0x45,0xF0
/*	movabs	$0x100000000,%rax	\ 409E61 	*/.byte 0x48,0xB8,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
/*	cmp	%rax,-0x10(%rbp)	\ 409E6B 	*/.byte 0x48,0x39,0x45,0xF0
/*	sbb	%rax,%rax	\ 409E6F 	*/.byte 0x48,0x19,0xC0
/*	andq	$-0x01,%rax	\ 409E72 	*/.byte 0x48,0x83,0xE0,0xFF
/*	mov	-0x08(%rbp),%rax	\ 409E76 	*/.byte 0x48,0x8B,0x45,0xF8
;/   IF	$B8 C, L,  \   mov $X,%eax
/*	jz	0x409EA2  { LIT,0+67  } 	\ 409E7A 	*/.byte 0xF,0x84,0x22,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 409E80 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0xB8,%eax	\ 409E84 	*/.byte 0xB8,0xB8,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409E89 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409E8D E8 5C 78 FF FF 
	call	0x4016AB  { L, } 	\ 409E92 E8 14 78 FF FF 
;/   	OPT   OPT_CLOSE
	call	0x408DA1  { OPT } 	\ 409E97 E8 5 EF FF FF 
	call	0x409175  { OPT_CLOSE } 	\ 409E9C E8 D4 F2 FF FF 
;/   BREAK
	ret		\ 409EA1 C3 
;/
;/   DUP  0x80000000 + 0x100000000 U< 
/*	mov	%rax,-0x08(%rbp)	\ 409EA2 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	%rax,-0x10(%rbp)	\ 409EA6 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	$0x80000000,%eax	\ 409EAA 	*/.byte 0xB8,0x0,0x0,0x0,0x80
/*	add	-0x10(%rbp),%rax	\ 409EAF 	*/.byte 0x48,0x3,0x45,0xF0
/*	mov	%rax,-0x10(%rbp)	\ 409EB3 	*/.byte 0x48,0x89,0x45,0xF0
/*	movabs	$0x100000000,%rax	\ 409EB7 	*/.byte 0x48,0xB8,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
/*	cmp	%rax,-0x10(%rbp)	\ 409EC1 	*/.byte 0x48,0x39,0x45,0xF0
/*	sbb	%rax,%rax	\ 409EC5 	*/.byte 0x48,0x19,0xC0
	test	%rax,%rax	\ 409EC8 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 409ECB 	*/.byte 0x48,0x8B,0x45,0xF8
;/   IF     $48 C,  $c0c7 W,  L,
/*	jz	0x409F03  { LIT,0+C8  } 	\ 409ECF 	*/.byte 0xF,0x84,0x2E,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 409ED5 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x48,%eax	\ 409ED9 	*/.byte 0xB8,0x48,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409EDE 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409EE2 E8 7 78 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409EE7 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0xC0C7,%eax	\ 409EEB 	*/.byte 0xB8,0xC7,0xC0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409EF0 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016CC  { W, } 	\ 409EF4 E8 D3 77 FF FF 
	call	0x4016AB  { L, } 	\ 409EF9 E8 AD 77 FF FF 
;/   ELSE   $48 C,  $B8 C,  , \ OPT  \ MOVABS RAX, #
/*	jmp	0x409F2C  { LIT,0+F1  } 	\ 409EFE 	*/.byte 0xE9,0x29,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 409F03 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x48,%eax	\ 409F07 	*/.byte 0xB8,0x48,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409F0C 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409F10 E8 D9 77 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409F15 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0xB8,%eax	\ 409F19 	*/.byte 0xB8,0xB8,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409F1E 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409F22 E8 C7 77 FF FF 
	call	0x401690  { , } 	\ 409F27 E8 64 77 FF FF 
;/   THEN
;/   OPT
	call	0x408DA1  { OPT } 	\ 409F2C E8 70 EE FF FF 
;/   OPT_CLOSE
	call	0x409175  { OPT_CLOSE } 	\ 409F31 E8 3F F2 FF FF 
;/;
	ret		\ 409F36 C3 
;/
;/' LIT,0 ->DEFER LIT,


LITcom:
	call	0x400B02  { DOVECT } 	\ 409F37 E8 C6 6B FF FF 
	.quad 0x409E3B  { LIT,0 } 

;/
;/: ADDR,  ( addr -- )
;/  'DUP INLINE,

ADDRcom:
/*	mov	%rax,-0x08(%rbp)	\ 409F44 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x4007F1  { DUP } (%rip),%rax	\ 409F48 	*/.byte 0x48,0x8D,0x5,0xA2,0x68,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 409F4F 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x40919C  { INLINE, } 	\ 409F53 E8 44 F2 FF FF 
;/   OPT_INIT     SetOP
	call	0x40916A  { OPT_INIT } 	\ 409F58 E8 D F2 FF FF 
	call	0x40240E  { SetOP } 	\ 409F5D E8 AC 84 FF FF 
;/	$48 C,  $058d  W,  THERE 4 + - L,  \   mov    N(%rip),%rax
/*	mov	%rax,-0x08(%rbp)	\ 409F62 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x48,%eax	\ 409F66 	*/.byte 0xB8,0x48,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409F6B 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 409F6F E8 7A 77 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409F74 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x58D,%eax	\ 409F78 	*/.byte 0xB8,0x8D,0x5,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 409F7D 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016CC  { W, } 	\ 409F81 E8 46 77 FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 409F86 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x401650  { ORIGVIEWLINK+3A  } (%rip),%rax	\ 409F8A 	*/.byte 0x48,0x8B,0x5,0xBF,0x76,0xFF,0xFF
/*	lea	0x04(%rax),%rax	\ 409F91 	*/.byte 0x48,0x8D,0x40,0x4
/*		negq	%rax	\ 409F95 	*/.byte 0x48,0xF7,0xD8
/*	add	-0x08(%rbp),%rax	\ 409F98 	*/.byte 0x48,0x3,0x45,0xF8
	call	0x4016AB  { L, } 	\ 409F9C E8 A 77 FF FF 
;/      OPT
	call	0x408DA1  { OPT } 	\ 409FA1 E8 FB ED FF FF 
;/  OPT_CLOSE
	call	0x409175  { OPT_CLOSE } 	\ 409FA6 E8 CA F1 FF FF 
;/;
	ret		\ 409FAB C3 
;/
;/: ?VALUE ( cfa -- cfa flg)  DUP 1+ DUP SL@ + 4 + ['] DOVALUE = ;


queVALUE:
/*	mov	%rax,-0x08(%rbp)	\ 409FAC 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x01(%rax),%rax	\ 409FB0 	*/.byte 0x48,0x8D,0x40,0x1
/*	mov	%rax,-0x10(%rbp)	\ 409FB4 	*/.byte 0x48,0x89,0x45,0xF0
/*	lea	-0x10(%rbp),%rbp	\ 409FB8 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	0x40048A  { SL@ } 	\ 409FBC E8 C9 64 FF FF 
/*	add	0x00(%rbp),%rax	\ 409FC1 	*/.byte 0x48,0x3,0x45,0x0
/*	lea	0x04(%rax),%rax	\ 409FC5 	*/.byte 0x48,0x8D,0x40,0x4
/*	mov	%rax,0x00(%rbp)	\ 409FC9 	*/.byte 0x48,0x89,0x45,0x0
/*	lea	0x400AF4  { DOVALUE } (%rip),%rax	\ 409FCD 	*/.byte 0x48,0x8D,0x5,0x20,0x6B,0xFF,0xFF
/*	xor	0x00(%rbp),%rax	\ 409FD4 	*/.byte 0x48,0x33,0x45,0x0
/*	subq	$0x01,%rax	\ 409FD8 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 409FDC 	*/.byte 0x48,0x19,0xC0
/*	lea	0x08(%rbp),%rbp	\ 409FDF 	*/.byte 0x48,0x8D,0x6D,0x8
	ret		\ 409FE3 C3 
;/: ?CONST ( cfa -- cfa flg)  DUP 1+ DUP SL@ + 4 + ['] DOCONSTANT = ;


queCONST:
/*	mov	%rax,-0x08(%rbp)	\ 409FE4 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x01(%rax),%rax	\ 409FE8 	*/.byte 0x48,0x8D,0x40,0x1
/*	mov	%rax,-0x10(%rbp)	\ 409FEC 	*/.byte 0x48,0x89,0x45,0xF0
/*	lea	-0x10(%rbp),%rbp	\ 409FF0 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	0x40048A  { SL@ } 	\ 409FF4 E8 91 64 FF FF 
/*	add	0x00(%rbp),%rax	\ 409FF9 	*/.byte 0x48,0x3,0x45,0x0
/*	lea	0x04(%rax),%rax	\ 409FFD 	*/.byte 0x48,0x8D,0x40,0x4
/*	mov	%rax,0x00(%rbp)	\ 40A001 	*/.byte 0x48,0x89,0x45,0x0
/*	lea	0x400AF5  { DOCONSTANT } (%rip),%rax	\ 40A005 	*/.byte 0x48,0x8D,0x5,0xE9,0x6A,0xFF,0xFF
/*	xor	0x00(%rbp),%rax	\ 40A00C 	*/.byte 0x48,0x33,0x45,0x0
/*	subq	$0x01,%rax	\ 40A010 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A014 	*/.byte 0x48,0x19,0xC0
/*	lea	0x08(%rbp),%rbp	\ 40A017 	*/.byte 0x48,0x8D,0x6D,0x8
	ret		\ 40A01B C3 
;/: ?VAR   ( cfa -- cfa flg)  DUP 1+ DUP SL@ + 4 + ['] DOCREATE = ;


queVAR:
/*	mov	%rax,-0x08(%rbp)	\ 40A01C 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x01(%rax),%rax	\ 40A020 	*/.byte 0x48,0x8D,0x40,0x1
/*	mov	%rax,-0x10(%rbp)	\ 40A024 	*/.byte 0x48,0x89,0x45,0xF0
/*	lea	-0x10(%rbp),%rbp	\ 40A028 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	0x40048A  { SL@ } 	\ 40A02C E8 59 64 FF FF 
/*	add	0x00(%rbp),%rax	\ 40A031 	*/.byte 0x48,0x3,0x45,0x0
/*	lea	0x04(%rax),%rax	\ 40A035 	*/.byte 0x48,0x8D,0x40,0x4
/*	mov	%rax,0x00(%rbp)	\ 40A039 	*/.byte 0x48,0x89,0x45,0x0
/*	lea	0x400AEA  { DOCREATE } (%rip),%rax	\ 40A03D 	*/.byte 0x48,0x8D,0x5,0xA6,0x6A,0xFF,0xFF
/*	xor	0x00(%rbp),%rax	\ 40A044 	*/.byte 0x48,0x33,0x45,0x0
/*	subq	$0x01,%rax	\ 40A048 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A04C 	*/.byte 0x48,0x19,0xC0
/*	lea	0x08(%rbp),%rbp	\ 40A04F 	*/.byte 0x48,0x8D,0x6D,0x8
	ret		\ 40A053 C3 
;/
;/T: _COMPILE, ( cfa -- )
;/  0xE8 C, \ CALL


_COMPILEcom:
/*	mov	%rax,-0x08(%rbp)	\ 40A054 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0xE8,%eax	\ 40A058 	*/.byte 0xB8,0xE8,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 40A05D 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x4016EE  { C, } 	\ 40A061 E8 88 76 FF FF 
;/  HERE 4 + - L,
/*	mov	%rax,-0x08(%rbp)	\ 40A066 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x401650  { ORIGVIEWLINK+3A  } (%rip),%rax	\ 40A06A 	*/.byte 0x48,0x8B,0x5,0xDF,0x75,0xFF,0xFF
/*	mov	%rax,0x402375  { :-SET+5  } (%rip)	\ 40A071 	*/.byte 0x48,0x89,0x5,0xFD,0x82,0xFF,0xFF
/*	lea	0x04(%rax),%rax	\ 40A078 	*/.byte 0x48,0x8D,0x40,0x4
/*		negq	%rax	\ 40A07C 	*/.byte 0x48,0xF7,0xD8
/*	add	-0x08(%rbp),%rax	\ 40A07F 	*/.byte 0x48,0x3,0x45,0xF8
	call	0x4016AB  { L, } 	\ 40A083 E8 23 76 FF FF 
;/;
	ret		\ 40A088 C3 
;/
;/T: COMPILE,
;/  ?CONST IF EXECUTE LIT, BREAK


COMPILEcom:
	call	0x409FE4  { ?CONST } 	\ 40A089 E8 56 FF FF FF 
	test	%rax,%rax	\ 40A08E 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A091 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A095 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A0AA  { COMPILE,+21  } 	\ 40A099 	*/.byte 0xF,0x84,0xB,0x0,0x0,0x0
	call	0x40047D  { EXECUTE } 	\ 40A09F E8 D9 63 FF FF 
	call	0x409F37  { LIT, } 	\ 40A0A4 E8 8E FE FF FF 
	ret		\ 40A0A9 C3 
;/  ?VAR	 IF EXECUTE ADDR, BREAK
	call	0x40A01C  { ?VAR } 	\ 40A0AA E8 6D FF FF FF 
	test	%rax,%rax	\ 40A0AF 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A0B2 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A0B6 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A0CB  { COMPILE,+42  } 	\ 40A0BA 	*/.byte 0xF,0x84,0xB,0x0,0x0,0x0
	call	0x40047D  { EXECUTE } 	\ 40A0C0 E8 B8 63 FF FF 
	call	0x409F44  { ADDR, } 	\ 40A0C5 E8 7A FE FF FF 
	ret		\ 40A0CA C3 
;/  ?VALUE IF >BODY ADDR, 'GET INLINE, BREAK
	call	0x409FAC  { ?VALUE } 	\ 40A0CB E8 DC FE FF FF 
	test	%rax,%rax	\ 40A0D0 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A0D3 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A0D7 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A103  { COMPILE,+7A  } 	\ 40A0DB 	*/.byte 0xF,0x84,0x22,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A0E1 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x05(%rax),%rax	\ 40A0E5 	*/.byte 0x48,0x8D,0x40,0x5
	call	0x409F44  { ADDR, } 	\ 40A0E9 E8 56 FE FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 40A0EE 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x400492  { @ } (%rip),%rax	\ 40A0F2 	*/.byte 0x48,0x8D,0x5,0x99,0x63,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 40A0F9 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x40919C  { INLINE, } 	\ 40A0FD E8 9A F0 FF FF 
	ret		\ 40A102 C3 
;/	INLINE? IF  INLINE, BREAK
	call	0x408B2B  { INLINE? } 	\ 40A103 E8 23 EA FF FF 
	test	%rax,%rax	\ 40A108 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A10B 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A10F 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A11F  { COMPILE,+96  } 	\ 40A113 	*/.byte 0xF,0x84,0x6,0x0,0x0,0x0
	call	0x40919C  { INLINE, } 	\ 40A119 E8 7E F0 FF FF 
	ret		\ 40A11E C3 
;/	_COMPILE, ;
	call	0x40A054  { _COMPILE, } 	\ 40A11F E8 30 FF FF FF 
	ret		\ 40A124 C3 
;/
;/: NUMBER,      ( d -- )
;/                DOUBLE? 0= IF DROP THEN


NUMBERcom:
/*	mov	%rax,-0x08(%rbp)	\ 40A125 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x409B38  { /STRING+2C  } (%rip),%rax	\ 40A129 	*/.byte 0x48,0x8B,0x5,0x8,0xFA,0xFF,0xFF
/*	subq	$0x01,%rax	\ 40A130 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A134 	*/.byte 0x48,0x19,0xC0
	test	%rax,%rax	\ 40A137 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A13A 	*/.byte 0x48,0x8B,0x45,0xF8
/*	jz	0x40A14C  { NUMBER,+27  } 	\ 40A13E 	*/.byte 0xF,0x84,0x8,0x0,0x0,0x0
/*	mov	0x00(%rbp),%rax	\ 40A144 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A148 	*/.byte 0x48,0x8D,0x6D,0x8
;/                STATE @
/*	mov	%rax,-0x08(%rbp)	\ 40A14C 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x4010F8  { SLEEP+2B  } (%rip),%rax	\ 40A150 	*/.byte 0x48,0x8B,0x5,0xA1,0x6F,0xFF,0xFF
	test	%rax,%rax	\ 40A157 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A15A 	*/.byte 0x48,0x8B,0x45,0xF8
;/                IF      DOUBLE? IF  SWAP  LIT,  THEN
/*	jz	0x40A191  { NUMBER,+6C  } 	\ 40A15E 	*/.byte 0xF,0x84,0x2D,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A164 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x409B38  { /STRING+2C  } (%rip),%rax	\ 40A168 	*/.byte 0x48,0x8B,0x5,0xC9,0xF9,0xFF,0xFF
	test	%rax,%rax	\ 40A16F 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A172 	*/.byte 0x48,0x8B,0x45,0xF8
/*	jz	0x40A18C  { NUMBER,+67  } 	\ 40A176 	*/.byte 0xF,0x84,0x10,0x0,0x0,0x0
/*	mov	0x00(%rbp),%rdx	\ 40A17C 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A180 	*/.byte 0x48,0x89,0x45,0x0
/*	mov	%rdx,%rax	\ 40A184 	*/.byte 0x48,0x89,0xD0
	call	0x409F37  { LIT, } 	\ 40A187 E8 AB FD FF FF 
;/                        LIT,
	call	0x409F37  { LIT, } 	\ 40A18C E8 A6 FD FF FF 
;/                THEN
;/;
	ret		\ 40A191 C3 
;/
;/: XXX-SLITERAL ( addr u -> d true | false ) 
;/   NUMBER?


XXXsubSLITERAL:
	call	0x409B68  { NUMBER? } 	\ 40A192 E8 D1 F9 FF FF 
;/ IF NUMBER, TRUE  EXIT
	test	%rax,%rax	\ 40A197 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A19A 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A19E 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A1BD  { XXX-SLITERAL+2B  } 	\ 40A1A2 	*/.byte 0xF,0x84,0x15,0x0,0x0,0x0
	call	0x40A125  { NUMBER, } 	\ 40A1A8 E8 78 FF FF FF 
/*	mov	%rax,-0x08(%rbp)	\ 40A1AD 	*/.byte 0x48,0x89,0x45,0xF8
/*	movq	$-0x1,%rax	\ 40A1B1 	*/.byte 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 40A1B8 	*/.byte 0x48,0x8D,0x6D,0xF8
	ret		\ 40A1BC C3 
;/ THEN
;/   2DROP FALSE
/*	mov	$0x0,%eax	\ 40A1BD 	*/.byte 0xB8,0x0,0x0,0x0,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A1C2 	*/.byte 0x48,0x8D,0x6D,0x8
;/;
	ret		\ 40A1C6 C3 
;/
;/: BIN-SLITERAL ( addr u -> d true | false )
;/  BASE @ >R 2 BASE !


BINsubSLITERAL:
/*	mov	%rax,-0x08(%rbp)	\ 40A1C7 	*/.byte 0x48,0x89,0x45,0xF8
/*	push	0x401558  { SLEEP+48B  } (%rip)	\ 40A1CB 	*/.byte 0xFF,0x35,0x87,0x73,0xFF,0xFF
/*	movq	$0x2,0x401558  { SLEEP+48B  } (%rip)	\ 40A1D1 	*/.byte 0x48,0xC7,0x5,0x7C,0x73,0xFF,0xFF,0x2,0x0,0x0,0x0
/*	mov	-0x08(%rbp),%rax	\ 40A1DC 	*/.byte 0x48,0x8B,0x45,0xF8
;/  XXX-SLITERAL
	call	0x40A192  { XXX-SLITERAL } 	\ 40A1E0 E8 AD FF FF FF 
;/  R> BASE !
/*	mov	%rax,-0x08(%rbp)	\ 40A1E5 	*/.byte 0x48,0x89,0x45,0xF8
	pop	-0x10(%rbp)	\ 40A1E9 8F 45 F0 
/*	lea	0x401558  { SLEEP+48B  } (%rip),%rax	\ 40A1EC 	*/.byte 0x48,0x8D,0x5,0x65,0x73,0xFF,0xFF
/*	mov	-0x10(%rbp),%rdx	\ 40A1F3 	*/.byte 0x48,0x8B,0x55,0xF0
/*	mov	%rdx,(%rax)	\ 40A1F7 	*/.byte 0x48,0x89,0x10
/*	mov	-0x08(%rbp),%rax	\ 40A1FA 	*/.byte 0x48,0x8B,0x45,0xF8
;/;
	ret		\ 40A1FE C3 
;/
;/: HHH-SLITERAL ( addr u -> d true | false )
;/  BASE @ >R HEX


HHHsubSLITERAL:
/*	mov	%rax,-0x08(%rbp)	\ 40A1FF 	*/.byte 0x48,0x89,0x45,0xF8
/*	push	0x401558  { SLEEP+48B  } (%rip)	\ 40A203 	*/.byte 0xFF,0x35,0x4F,0x73,0xFF,0xFF
/*	movq	$0x10,0x401558  { SLEEP+48B  } (%rip)	\ 40A209 	*/.byte 0x48,0xC7,0x5,0x44,0x73,0xFF,0xFF,0x10,0x0,0x0,0x0
/*	mov	-0x08(%rbp),%rax	\ 40A214 	*/.byte 0x48,0x8B,0x45,0xF8
;/  2- SWAP 2+ SWAP
/*	lea	-0x02(%rax),%rax	\ 40A218 	*/.byte 0x48,0x8D,0x40,0xFE
/*	mov	0x00(%rbp),%rdx	\ 40A21C 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A220 	*/.byte 0x48,0x89,0x45,0x0
/*	lea	0x01(%rdx),%rax	\ 40A224 	*/.byte 0x48,0x8D,0x42,0x1
/*	lea	0x01(%rax),%rax	\ 40A228 	*/.byte 0x48,0x8D,0x40,0x1
/*	mov	0x00(%rbp),%rdx	\ 40A22C 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A230 	*/.byte 0x48,0x89,0x45,0x0
/*	mov	%rdx,%rax	\ 40A234 	*/.byte 0x48,0x89,0xD0
;/  XXX-SLITERAL
	call	0x40A192  { XXX-SLITERAL } 	\ 40A237 E8 56 FF FF FF 
;/  R> BASE !
/*	mov	%rax,-0x08(%rbp)	\ 40A23C 	*/.byte 0x48,0x89,0x45,0xF8
	pop	-0x10(%rbp)	\ 40A240 8F 45 F0 
/*	lea	0x401558  { SLEEP+48B  } (%rip),%rax	\ 40A243 	*/.byte 0x48,0x8D,0x5,0xE,0x73,0xFF,0xFF
/*	mov	-0x10(%rbp),%rdx	\ 40A24A 	*/.byte 0x48,0x8B,0x55,0xF0
/*	mov	%rdx,(%rax)	\ 40A24E 	*/.byte 0x48,0x89,0x10
/*	mov	-0x08(%rbp),%rax	\ 40A251 	*/.byte 0x48,0x8B,0x45,0xF8
;/;
	ret		\ 40A255 C3 
;/
;/
;/: UPC  ( c -- c' )
;/   DUP  [CHAR] a [CHAR] z 1+ WITHIN


UPC:
/*	mov	%rax,-0x08(%rbp)	\ 40A256 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	%rax,-0x10(%rbp)	\ 40A25A 	*/.byte 0x48,0x89,0x45,0xF0
/*	movq	$0x61,-0x18(%rbp)	\ 40A25E 	*/.byte 0x48,0xC7,0x45,0xE8,0x61,0x0,0x0,0x0
/*	mov	$0x7B,%eax	\ 40A266 	*/.byte 0xB8,0x7B,0x0,0x0,0x0
/*	lea	-0x18(%rbp),%rbp	\ 40A26B 	*/.byte 0x48,0x8D,0x6D,0xE8
	call	0x400691  { WITHIN } 	\ 40A26F E8 1D 64 FF FF 
;/   IF  0x20 ANDC
	test	%rax,%rax	\ 40A274 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A277 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A27B 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A289  { UPC+33  } 	\ 40A27F 	*/.byte 0xF,0x84,0x4,0x0,0x0,0x0
/*	andq	$-0x21,%rax	\ 40A285 	*/.byte 0x48,0x83,0xE0,0xDF
;/   THEN   ;
	ret		\ 40A289 C3 
;/
;/
;/: SNUMBER ( addr len -- d1 )
;/ NUMBER? THROW ;


SNUMBER:
	call	0x409B68  { NUMBER? } 	\ 40A28A E8 D9 F8 FF FF 
	call	0x401F30  { THROW } 	\ 40A28F E8 9C 7C FF FF 
	ret		\ 40A294 C3 
;/
;/: NUMBER ( a1 -- d1 )
;/\ Convert count delimited string at a1 into a double number.
;/
;/\  0 0 ROT COUNT >NUMBER THROW DROP
;/
;/ COUNT


NUMBER:
/*	lea	0x01(%rax),%rdx	\ 40A295 	*/.byte 0x48,0x8D,0x50,0x1
/*	movzbq	(%rax),%rax	\ 40A299 	*/.byte 0x48,0xF,0xB6,0x0
/*	mov	%rdx,-0x08(%rbp)	\ 40A29D 	*/.byte 0x48,0x89,0x55,0xF8
/*	lea	-0x08(%rbp),%rbp	\ 40A2A1 	*/.byte 0x48,0x8D,0x6D,0xF8
;/ NUMBER? 0=
	call	0x409B68  { NUMBER? } 	\ 40A2A5 E8 BE F8 FF FF 
/*	subq	$0x01,%rax	\ 40A2AA 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A2AE 	*/.byte 0x48,0x19,0xC0
;/ THROW ;
	call	0x401F30  { THROW } 	\ 40A2B1 E8 7A 7C FF FF 
	ret		\ 40A2B6 C3 
;/
;/
;/0 VALUE ^INCLUDED


picINCLUDED:
	call	0x400AF4  { DOVALUE } 	\ 40A2B7 E8 38 68 FF FF 

	DQ 0x0
;/
;/: ?SLITERAL3_H  ( c-addr u -- ... )
;/  DUP 1 >

queSLITERAL3_H:
/*	mov	%rax,-0x08(%rbp)	\ 40A2C4 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	%rax,-0x10(%rbp)	\ 40A2C8 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	$0x1,%eax	\ 40A2CC 	*/.byte 0xB8,0x1,0x0,0x0,0x0
/*	cmp	-0x10(%rbp),%rax	\ 40A2D1 	*/.byte 0x48,0x3B,0x45,0xF0
	setl	%al	\ 40A2D5 F 9C C0 
/*		neg	%al	\ 40A2D8 	*/.byte 0xF6,0xD8
/*	movsbq	%al,%rax	\ 40A2DA 	*/.byte 0x48,0xF,0xBE,0xC0
	test	%rax,%rax	\ 40A2DE 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A2E1 	*/.byte 0x48,0x8B,0x45,0xF8
;/     IF
/*	jz	0x40A5B1  { ?SLITERAL3_H+2ED  } 	\ 40A2E5 	*/.byte 0xF,0x84,0xC6,0x2,0x0,0x0
;/
;/	 2DUP 2>R
/*	mov	0x00(%rbp),%rdx	\ 40A2EB 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A2EF 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	%rdx,-0x10(%rbp)	\ 40A2F3 	*/.byte 0x48,0x89,0x55,0xF0
/*	lea	-0x10(%rbp),%rbp	\ 40A2F7 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	0x400456  { 2>R } 	\ 40A2FB E8 56 61 FF FF 
;/         OVER C@ [CHAR] - = DUP  &?MINUS !
/*	mov	%rax,-0x08(%rbp)	\ 40A300 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x00(%rbp),%rax	\ 40A304 	*/.byte 0x48,0x8B,0x45,0x0
/*	movzb	(%rax),%eax	\ 40A308 	*/.byte 0xF,0xB6,0x0
/*	xor	$0x2D,%rax	\ 40A30B 	*/.byte 0x48,0x35,0x2D,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A311 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A315 	*/.byte 0x48,0x19,0xC0
/*	mov	%rax,0x409B40  { /STRING+34  } (%rip)	\ 40A318 	*/.byte 0x48,0x89,0x5,0x21,0xF8,0xFF,0xFF
	test	%rax,%rax	\ 40A31F 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A322 	*/.byte 0x48,0x8B,0x45,0xF8
;/         IF    1 /STRING 
/*	jz	0x40A33E  { ?SLITERAL3_H+7A  } 	\ 40A326 	*/.byte 0xF,0x84,0x12,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A32C 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	$0x1,%eax	\ 40A330 	*/.byte 0xB8,0x1,0x0,0x0,0x0
/*	lea	-0x08(%rbp),%rbp	\ 40A335 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x409B0C  { /STRING } 	\ 40A339 E8 CE F7 FF FF 
;/         THEN
;/
;/         OVER W@ 0x7830 ( 0x) = 
/*	mov	%rax,-0x08(%rbp)	\ 40A33E 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x00(%rbp),%rax	\ 40A342 	*/.byte 0x48,0x8B,0x45,0x0
/*	movzw	(%rax),%eax	\ 40A346 	*/.byte 0xF,0xB7,0x0
/*	xor	$0x7830,%rax	\ 40A349 	*/.byte 0x48,0x35,0x30,0x78,0x0,0x0
/*	subq	$0x01,%rax	\ 40A34F 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A353 	*/.byte 0x48,0x19,0xC0
	test	%rax,%rax	\ 40A356 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A359 	*/.byte 0x48,0x8B,0x45,0xF8
;/         IF     HHH-SLITERAL
/*	jz	0x40A39D  { ?SLITERAL3_H+D9  } 	\ 40A35D 	*/.byte 0xF,0x84,0x3A,0x0,0x0,0x0
	call	0x40A1FF  { HHH-SLITERAL } 	\ 40A363 E8 97 FE FF FF 
;/		IF RDROP RDROP
	test	%rax,%rax	\ 40A368 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A36B 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A36F 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A388  { ?SLITERAL3_H+C4  } 	\ 40A373 	*/.byte 0xF,0x84,0xF,0x0,0x0,0x0
/*	lea	0x08(%rsp),%rsp	\ 40A379 	*/.byte 0x48,0x8D,0x64,0x24,0x8
/*	lea	0x08(%rsp),%rsp	\ 40A37E 	*/.byte 0x48,0x8D,0x64,0x24,0x8
;/		ELSE -13 THROW
/*	jmp	0x40A39C  { ?SLITERAL3_H+D8  } 	\ 40A383 	*/.byte 0xE9,0x14,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A388 	*/.byte 0x48,0x89,0x45,0xF8
/*	movq	$-0xD,%rax	\ 40A38C 	*/.byte 0x48,0xC7,0xC0,0xF3,0xFF,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 40A393 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x401F30  { THROW } 	\ 40A397 E8 94 7B FF FF 
;/		THEN EXIT
	ret		\ 40A39C C3 
;/         THEN
;/
;/          OVER C@ [CHAR] $ = 
/*	mov	%rax,-0x08(%rbp)	\ 40A39D 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x00(%rbp),%rax	\ 40A3A1 	*/.byte 0x48,0x8B,0x45,0x0
/*	movzb	(%rax),%eax	\ 40A3A5 	*/.byte 0xF,0xB6,0x0
/*	xor	$0x24,%rax	\ 40A3A8 	*/.byte 0x48,0x35,0x24,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A3AE 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A3B2 	*/.byte 0x48,0x19,0xC0
	test	%rax,%rax	\ 40A3B5 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A3B8 	*/.byte 0x48,0x8B,0x45,0xF8
;/         IF 1+ SWAP 1- SWAP HHH-SLITERAL
/*	jz	0x40A417  { ?SLITERAL3_H+153  } 	\ 40A3BC 	*/.byte 0xF,0x84,0x55,0x0,0x0,0x0
/*	lea	0x01(%rax),%rax	\ 40A3C2 	*/.byte 0x48,0x8D,0x40,0x1
/*	mov	0x00(%rbp),%rdx	\ 40A3C6 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A3CA 	*/.byte 0x48,0x89,0x45,0x0
/*	lea	-0x01(%rdx),%rax	\ 40A3CE 	*/.byte 0x48,0x8D,0x42,0xFF
/*	mov	0x00(%rbp),%rdx	\ 40A3D2 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A3D6 	*/.byte 0x48,0x89,0x45,0x0
/*	mov	%rdx,%rax	\ 40A3DA 	*/.byte 0x48,0x89,0xD0
	call	0x40A1FF  { HHH-SLITERAL } 	\ 40A3DD E8 1D FE FF FF 
;/		IF RDROP RDROP
	test	%rax,%rax	\ 40A3E2 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A3E5 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A3E9 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A402  { ?SLITERAL3_H+13E  } 	\ 40A3ED 	*/.byte 0xF,0x84,0xF,0x0,0x0,0x0
/*	lea	0x08(%rsp),%rsp	\ 40A3F3 	*/.byte 0x48,0x8D,0x64,0x24,0x8
/*	lea	0x08(%rsp),%rsp	\ 40A3F8 	*/.byte 0x48,0x8D,0x64,0x24,0x8
;/		ELSE -13 THROW
/*	jmp	0x40A416  { ?SLITERAL3_H+152  } 	\ 40A3FD 	*/.byte 0xE9,0x14,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A402 	*/.byte 0x48,0x89,0x45,0xF8
/*	movq	$-0xD,%rax	\ 40A406 	*/.byte 0x48,0xC7,0xC0,0xF3,0xFF,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 40A40D 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x401F30  { THROW } 	\ 40A411 E8 1A 7B FF FF 
;/		THEN EXIT
	ret		\ 40A416 C3 
;/         THEN
;/              2DUP + 1- C@ UPC [CHAR] H =
/*	mov	0x00(%rbp),%rdx	\ 40A417 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A41B 	*/.byte 0x48,0x89,0x45,0xF8
/*	add	%rdx,%rax	\ 40A41F 	*/.byte 0x48,0x1,0xD0
/*	movzb	-0x01(%rax),%eax	\ 40A422 	*/.byte 0xF,0xB6,0x40,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 40A426 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x40A256  { UPC } 	\ 40A42A E8 27 FE FF FF 
/*	xor	$0x48,%rax	\ 40A42F 	*/.byte 0x48,0x35,0x48,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A435 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A439 	*/.byte 0x48,0x19,0xC0
;/         IF  1+  SWAP 2- SWAP  HHH-SLITERAL
	test	%rax,%rax	\ 40A43C 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A43F 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A443 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A492  { ?SLITERAL3_H+1CE  } 	\ 40A447 	*/.byte 0xF,0x84,0x45,0x0,0x0,0x0
/*	lea	0x01(%rax),%rax	\ 40A44D 	*/.byte 0x48,0x8D,0x40,0x1
/*	mov	0x00(%rbp),%rdx	\ 40A451 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A455 	*/.byte 0x48,0x89,0x45,0x0
/*	lea	-0x01(%rdx),%rax	\ 40A459 	*/.byte 0x48,0x8D,0x42,0xFF
/*	lea	-0x01(%rax),%rax	\ 40A45D 	*/.byte 0x48,0x8D,0x40,0xFF
/*	mov	0x00(%rbp),%rdx	\ 40A461 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A465 	*/.byte 0x48,0x89,0x45,0x0
/*	mov	%rdx,%rax	\ 40A469 	*/.byte 0x48,0x89,0xD0
	call	0x40A1FF  { HHH-SLITERAL } 	\ 40A46C E8 8E FD FF FF 
;/		IF RDROP RDROP  EXIT
	test	%rax,%rax	\ 40A471 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A474 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A478 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A48D  { ?SLITERAL3_H+1C9  } 	\ 40A47C 	*/.byte 0xF,0x84,0xB,0x0,0x0,0x0
/*	lea	0x08(%rsp),%rsp	\ 40A482 	*/.byte 0x48,0x8D,0x64,0x24,0x8
/*	lea	0x08(%rsp),%rsp	\ 40A487 	*/.byte 0x48,0x8D,0x64,0x24,0x8
	ret		\ 40A48C C3 
;/		THEN	2R@
	call	0x40043F  { 2R@ } 	\ 40A48D E8 AD 5F FF FF 
;/         THEN
;/
;/             2DUP + 1- C@ UPC [CHAR] B = BASE @ 0x10 <> AND
/*	mov	0x00(%rbp),%rdx	\ 40A492 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A496 	*/.byte 0x48,0x89,0x45,0xF8
/*	add	%rdx,%rax	\ 40A49A 	*/.byte 0x48,0x1,0xD0
/*	movzb	-0x01(%rax),%eax	\ 40A49D 	*/.byte 0xF,0xB6,0x40,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 40A4A1 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x40A256  { UPC } 	\ 40A4A5 E8 AC FD FF FF 
/*	xor	$0x42,%rax	\ 40A4AA 	*/.byte 0x48,0x35,0x42,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A4B0 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A4B4 	*/.byte 0x48,0x19,0xC0
/*	mov	%rax,-0x08(%rbp)	\ 40A4B7 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x401558  { SLEEP+48B  } (%rip),%rax	\ 40A4BB 	*/.byte 0x48,0x8B,0x5,0x96,0x70,0xFF,0xFF
/*	xor	$0x10,%rax	\ 40A4C2 	*/.byte 0x48,0x35,0x10,0x0,0x0,0x0
/*		negq	%rax	\ 40A4C8 	*/.byte 0x48,0xF7,0xD8
/*	sbb	%rax,%rax	\ 40A4CB 	*/.byte 0x48,0x19,0xC0
/*	and	-0x08(%rbp),%rax	\ 40A4CE 	*/.byte 0x48,0x23,0x45,0xF8
;/         IF   1- BIN-SLITERAL
	test	%rax,%rax	\ 40A4D2 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A4D5 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A4D9 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A521  { ?SLITERAL3_H+25D  } 	\ 40A4DD 	*/.byte 0xF,0x84,0x3E,0x0,0x0,0x0
/*	lea	-0x01(%rax),%rax	\ 40A4E3 	*/.byte 0x48,0x8D,0x40,0xFF
	call	0x40A1C7  { BIN-SLITERAL } 	\ 40A4E7 E8 DB FC FF FF 
;/		IF RDROP RDROP 
	test	%rax,%rax	\ 40A4EC 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A4EF 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A4F3 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A50C  { ?SLITERAL3_H+248  } 	\ 40A4F7 	*/.byte 0xF,0x84,0xF,0x0,0x0,0x0
/*	lea	0x08(%rsp),%rsp	\ 40A4FD 	*/.byte 0x48,0x8D,0x64,0x24,0x8
/*	lea	0x08(%rsp),%rsp	\ 40A502 	*/.byte 0x48,0x8D,0x64,0x24,0x8
;/		ELSE -13 THROW
/*	jmp	0x40A520  { ?SLITERAL3_H+25C  } 	\ 40A507 	*/.byte 0xE9,0x14,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A50C 	*/.byte 0x48,0x89,0x45,0xF8
/*	movq	$-0xD,%rax	\ 40A510 	*/.byte 0x48,0xC7,0xC0,0xF3,0xFF,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 40A517 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x401F30  { THROW } 	\ 40A51B E8 10 7A FF FF 
;/		THEN EXIT
	ret		\ 40A520 C3 
;/         THEN
;/
;/             OVER @ 0xFF00FF  AND 0x270027 ( '\0')  = 
/*	mov	%rax,-0x08(%rbp)	\ 40A521 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x00(%rbp),%rax	\ 40A525 	*/.byte 0x48,0x8B,0x45,0x0
/*	mov	(%rax),%rax	\ 40A529 	*/.byte 0x48,0x8B,0x0
/*	and	$fimg+0xBF00FF,%eax	\ 40A52C 	*/.byte 0x25,0xFF,0x0,0xFF,0x0
/*	xor	$0x270027,%rax	\ 40A531 	*/.byte 0x48,0x35,0x27,0x0,0x27,0x0
/*	subq	$0x01,%rax	\ 40A537 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A53B 	*/.byte 0x48,0x19,0xC0
/*	mov	%rax,-0x10(%rbp)	\ 40A53E 	*/.byte 0x48,0x89,0x45,0xF0
;/             OVER 3 = AND
/*	mov	-0x08(%rbp),%rax	\ 40A542 	*/.byte 0x48,0x8B,0x45,0xF8
/*	xor	$0x3,%rax	\ 40A546 	*/.byte 0x48,0x35,0x3,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A54C 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A550 	*/.byte 0x48,0x19,0xC0
/*	and	-0x10(%rbp),%rax	\ 40A553 	*/.byte 0x48,0x23,0x45,0xF0
	test	%rax,%rax	\ 40A557 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A55A 	*/.byte 0x48,0x8B,0x45,0xF8
;/         IF  DROP @ 8 RSHIFT 0xFF AND
/*	jz	0x40A5A4  { ?SLITERAL3_H+2E0  } 	\ 40A55E 	*/.byte 0xF,0x84,0x40,0x0,0x0,0x0
/*	mov	0x00(%rbp),%rax	\ 40A564 	*/.byte 0x48,0x8B,0x45,0x0
/*	mov	(%rax),%rax	\ 40A568 	*/.byte 0x48,0x8B,0x0
/*	shr	$0x08,%rax	\ 40A56B 	*/.byte 0x48,0xC1,0xE8,0x8
/*	mov	%rax,0x00(%rbp)	\ 40A56F 	*/.byte 0x48,0x89,0x45,0x0
/*	and	$0xFF,%eax	\ 40A573 	*/.byte 0x25,0xFF,0x0,0x0,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A578 	*/.byte 0x48,0x89,0x45,0x0
;/            STATE @ IF LIT, THEN RDROP RDROP  EXIT
/*	mov	0x4010F8  { SLEEP+2B  } (%rip),%rax	\ 40A57C 	*/.byte 0x48,0x8B,0x5,0x75,0x6B,0xFF,0xFF
	test	%rax,%rax	\ 40A583 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A586 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A58A 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A599  { ?SLITERAL3_H+2D5  } 	\ 40A58E 	*/.byte 0xF,0x84,0x5,0x0,0x0,0x0
	call	0x409F37  { LIT, } 	\ 40A594 E8 9E F9 FF FF 
/*	lea	0x08(%rsp),%rsp	\ 40A599 	*/.byte 0x48,0x8D,0x64,0x24,0x8
/*	lea	0x08(%rsp),%rsp	\ 40A59E 	*/.byte 0x48,0x8D,0x64,0x24,0x8
	ret		\ 40A5A3 C3 
;/         THEN 
;/         2DROP 2R>
/*	mov	0x08(%rbp),%rax	\ 40A5A4 	*/.byte 0x48,0x8B,0x45,0x8
/*	lea	0x10(%rbp),%rbp	\ 40A5A8 	*/.byte 0x48,0x8D,0x6D,0x10
	call	0x40041E  { 2R> } 	\ 40A5AC E8 6D 5E FF FF 
;/  THEN
;/  2DUP 2>R 
/*	mov	0x00(%rbp),%rdx	\ 40A5B1 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A5B5 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	%rdx,-0x10(%rbp)	\ 40A5B9 	*/.byte 0x48,0x89,0x55,0xF0
/*	lea	-0x10(%rbp),%rbp	\ 40A5BD 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	0x400456  { 2>R } 	\ 40A5C1 E8 90 5E FF FF 
;/ XXX-SLITERAL 0=
	call	0x40A192  { XXX-SLITERAL } 	\ 40A5C6 E8 C7 FB FF FF 
/*	subq	$0x01,%rax	\ 40A5CB 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A5CF 	*/.byte 0x48,0x19,0xC0
;/  IF   2R>
	test	%rax,%rax	\ 40A5D2 48 85 C0 
/*	mov	0x00(%rbp),%rax	\ 40A5D5 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	\ 40A5D9 	*/.byte 0x48,0x8D,0x6D,0x8
/*	jz	0x40A6E5  { ?SLITERAL3_H+421  } 	\ 40A5DD 	*/.byte 0xF,0x84,0x2,0x1,0x0,0x0
	call	0x40041E  { 2R> } 	\ 40A5E3 E8 36 5E FF FF 
;/       OVER C@ [CHAR] " = OVER 2 > AND
/*	mov	%rax,-0x08(%rbp)	\ 40A5E8 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x00(%rbp),%rax	\ 40A5EC 	*/.byte 0x48,0x8B,0x45,0x0
/*	movzb	(%rax),%eax	\ 40A5F0 	*/.byte 0xF,0xB6,0x0
/*	xor	$0x22,%rax	\ 40A5F3 	*/.byte 0x48,0x35,0x22,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A5F9 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A5FD 	*/.byte 0x48,0x19,0xC0
/*	mov	%rax,-0x10(%rbp)	\ 40A600 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	-0x08(%rbp),%rax	\ 40A604 	*/.byte 0x48,0x8B,0x45,0xF8
/*	mov	%rax,-0x18(%rbp)	\ 40A608 	*/.byte 0x48,0x89,0x45,0xE8
/*	mov	$0x2,%eax	\ 40A60C 	*/.byte 0xB8,0x2,0x0,0x0,0x0
/*	cmp	-0x18(%rbp),%rax	\ 40A611 	*/.byte 0x48,0x3B,0x45,0xE8
	setl	%al	\ 40A615 F 9C C0 
/*		neg	%al	\ 40A618 	*/.byte 0xF6,0xD8
/*	movsbq	%al,%rax	\ 40A61A 	*/.byte 0x48,0xF,0xBE,0xC0
/*	and	-0x10(%rbp),%rax	\ 40A61E 	*/.byte 0x48,0x23,0x45,0xF0
	test	%rax,%rax	\ 40A622 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A625 	*/.byte 0x48,0x8B,0x45,0xF8
;/       IF 2 - SWAP 1+ SWAP THEN
/*	jz	0x40A64A  { ?SLITERAL3_H+386  } 	\ 40A629 	*/.byte 0xF,0x84,0x1B,0x0,0x0,0x0
/*	addq	$-0x02,%rax	\ 40A62F 	*/.byte 0x48,0x83,0xC0,0xFE
/*	mov	0x00(%rbp),%rdx	\ 40A633 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A637 	*/.byte 0x48,0x89,0x45,0x0
/*	lea	0x01(%rdx),%rax	\ 40A63B 	*/.byte 0x48,0x8D,0x42,0x1
/*	mov	0x00(%rbp),%rdx	\ 40A63F 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A643 	*/.byte 0x48,0x89,0x45,0x0
/*	mov	%rdx,%rax	\ 40A647 	*/.byte 0x48,0x89,0xD0
;/       2DUP + 0 SWAP C!
/*	mov	0x00(%rbp),%rdx	\ 40A64A 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A64E 	*/.byte 0x48,0x89,0x45,0xF8
/*	add	%rdx,%rax	\ 40A652 	*/.byte 0x48,0x1,0xD0
/*	movq	$0x0,-0x10(%rbp)	\ 40A655 	*/.byte 0x48,0xC7,0x45,0xF0,0x0,0x0,0x0,0x0
/*	mov	-0x10(%rbp),%dl	\ 40A65D 	*/.byte 0x8A,0x55,0xF0
/*	mov	%dl,(%rax)	\ 40A660 	*/.byte 0x88,0x10
/*	mov	0x40A2BC  { ^INCLUDED+5  } (%rip),%rax	\ 40A662 	*/.byte 0x48,0x8B,0x5,0x53,0xFC,0xFF,0xFF
;/       ^INCLUDED CATCH
/*	lea	-0x08(%rbp),%rbp	\ 40A669 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x401ED7  { CATCH } 	\ 40A66D E8 65 78 FF FF 
;/       DUP 2 = OVER 3 = OR OVER 161 = OR
/*	mov	%rax,-0x08(%rbp)	\ 40A672 	*/.byte 0x48,0x89,0x45,0xF8
/*	xor	$0x2,%rax	\ 40A676 	*/.byte 0x48,0x35,0x2,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A67C 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A680 	*/.byte 0x48,0x19,0xC0
/*	mov	%rax,-0x10(%rbp)	\ 40A683 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	-0x08(%rbp),%rax	\ 40A687 	*/.byte 0x48,0x8B,0x45,0xF8
/*	xor	$0x3,%rax	\ 40A68B 	*/.byte 0x48,0x35,0x3,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A691 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A695 	*/.byte 0x48,0x19,0xC0
/*	or	-0x10(%rbp),%rax	\ 40A698 	*/.byte 0x48,0xB,0x45,0xF0
/*	mov	%rax,-0x10(%rbp)	\ 40A69C 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	-0x08(%rbp),%rax	\ 40A6A0 	*/.byte 0x48,0x8B,0x45,0xF8
/*	xor	$0xA1,%rax	\ 40A6A4 	*/.byte 0x48,0x35,0xA1,0x0,0x0,0x0
/*	subq	$0x01,%rax	\ 40A6AA 	*/.byte 0x48,0x83,0xE8,0x1
/*	sbb	%rax,%rax	\ 40A6AE 	*/.byte 0x48,0x19,0xC0
/*	or	-0x10(%rbp),%rax	\ 40A6B1 	*/.byte 0x48,0xB,0x45,0xF0
	test	%rax,%rax	\ 40A6B5 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A6B8 	*/.byte 0x48,0x8B,0x45,0xF8
;/       IF  -2003 THROW \ ABORT"  -???"
/*	jz	0x40A6DB  { ?SLITERAL3_H+417  } 	\ 40A6BC 	*/.byte 0xF,0x84,0x19,0x0,0x0,0x0
/*	mov	%rax,-0x08(%rbp)	\ 40A6C2 	*/.byte 0x48,0x89,0x45,0xF8
/*	movq	$-0x7D3,%rax	\ 40A6C6 	*/.byte 0x48,0xC7,0xC0,0x2D,0xF8,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	\ 40A6CD 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	0x401F30  { THROW } 	\ 40A6D1 E8 5A 78 FF FF 
;/       ELSE   THROW  THEN
/*	jmp	0x40A6E0  { ?SLITERAL3_H+41C  } 	\ 40A6D6 	*/.byte 0xE9,0x5,0x0,0x0,0x0
	call	0x401F30  { THROW } 	\ 40A6DB E8 50 78 FF FF 
;/  ELSE RDROP RDROP
/*	jmp	0x40A6EF  { ?SLITERAL3_H+42B  } 	\ 40A6E0 	*/.byte 0xE9,0xA,0x0,0x0,0x0
/*	lea	0x08(%rsp),%rsp	\ 40A6E5 	*/.byte 0x48,0x8D,0x64,0x24,0x8
/*	lea	0x08(%rsp),%rsp	\ 40A6EA 	*/.byte 0x48,0x8D,0x64,0x24,0x8
;/  THEN
;/;
	ret		\ 40A6EF C3 
;/
;/' ?SLITERAL3_H ->DEFER ?SLITERAL


queSLITERAL:
	call	0x400B02  { DOVECT } 	\ 40A6F0 E8 D 64 FF FF 
	.quad 0x40A2C4  { ?SLITERAL3_H } 

;/
;/
;/\ VARIABLE  TBASE
;/T: DECIMAL DECIMAL ;

DECIMAL:
/*	movq	$0xA,0x401558  { SLEEP+48B  } (%rip)	\ 40A6FD 	*/.byte 0x48,0xC7,0x5,0x50,0x6E,0xFF,0xFF,0xA,0x0,0x0,0x0
	ret		\ 40A708 C3 
;/
;/: 2LITERAL_ STATE @ IF SWAP LIT, LIT, THEN ;


2LITERAL_:
/*	mov	%rax,-0x08(%rbp)	\ 40A709 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x4010F8  { SLEEP+2B  } (%rip),%rax	\ 40A70D 	*/.byte 0x48,0x8B,0x5,0xE4,0x69,0xFF,0xFF
	test	%rax,%rax	\ 40A714 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A717 	*/.byte 0x48,0x8B,0x45,0xF8
/*	jz	0x40A736  { 2LITERAL_+2D  } 	\ 40A71B 	*/.byte 0xF,0x84,0x15,0x0,0x0,0x0
/*	mov	0x00(%rbp),%rdx	\ 40A721 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	\ 40A725 	*/.byte 0x48,0x89,0x45,0x0
/*	mov	%rdx,%rax	\ 40A729 	*/.byte 0x48,0x89,0xD0
	call	0x409F37  { LIT, } 	\ 40A72C E8 6 F8 FF FF 
	call	0x409F37  { LIT, } 	\ 40A731 E8 1 F8 FF FF 
	ret		\ 40A736 C3 
;/:  LITERAL_ STATE @ IF LIT, THEN ;


LITERAL_:
/*	mov	%rax,-0x08(%rbp)	\ 40A737 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x4010F8  { SLEEP+2B  } (%rip),%rax	\ 40A73B 	*/.byte 0x48,0x8B,0x5,0xB6,0x69,0xFF,0xFF
	test	%rax,%rax	\ 40A742 48 85 C0 
/*	mov	-0x08(%rbp),%rax	\ 40A745 	*/.byte 0x48,0x8B,0x45,0xF8
/*	jz	0x40A754  { LITERAL_+1D  } 	\ 40A749 	*/.byte 0xF,0x84,0x5,0x0,0x0,0x0
	call	0x409F37  { LIT, } 	\ 40A74F E8 E3 F7 FF FF 
	ret		\ 40A754 C3 
;/
;/
;/\ S" 2345" NUMBER? H. H. H.
